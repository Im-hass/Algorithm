// 주어진 수가 1이 될 때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다
// 1-1. 입력된 수가 짝수라면 2로 나눕니다. 
// 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 
// 2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
// 위 작업을 몇 번 반복해야 하는지 return
// 단, 주어진 수가 1인 경우 0, 작업을 500번 반복할 때까지 1이 되지 않는다면 -1 return
function solution(num) {
    if (num === 1) return 0; // 주어진 수가 1일 경우 0 return
    
    let cnt = 0; // 작업 횟수
    while (num !== 1 && cnt < 500) { // 주어진 수가 1이 아니고, 작업 횟수가 500이 넘지 않을 때까지
        // if (num % 2 === 0) num /= 2;
        // else num = (num * 3) + 1;
        num % 2 === 0 ? num /= 2 : num = num * 3 + 1;
        cnt++;
    }
    
    if (cnt === 500) cnt = -1;
    return cnt;
}
